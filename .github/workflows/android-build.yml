# Adapted from Iceraven workflows
# https://github.com/fork-maintainers/iceraven-browser/blob/fork/.github/workflows/android-build.yml
# https://github.com/fork-maintainers/iceraven-browser/blob/fork/.github/workflows/release-automation.yml

name: Android build

on:
  push:
  create:
    tags:

jobs:
  run-build:
    runs-on: ubuntu-latest
    if: "contains(toJSON(github.ref_type), 'branch')"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Install Android SDK with pieces Gradle skips
        run: ./automation/install-sdk.sh

      - name: Create version name
        run: echo "VERSION_NAME=$(git describe --tags HEAD | sed 's/^v//')" >> $GITHUB_ENV

      - name: Build variant of app
        uses: eskatos/gradle-command-action@v1
        with:
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
          configuration-cache-enabled: true
          arguments: app:assembleRelease -PversionName=${{ env.VERSION_NAME }}

      - name: Create signed APKs
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release/
          signingKeyBase64: ${{ secrets.SIGNING_KEY_BASE64 }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEYSTORE_PASSWORD }}

      - name: List outputs after signing
        run: find /home/runner/ -name '*.apk' || true

      - name: Fix signed APK filenames
        run: cd app/build/outputs/apk/release && mv app-arm64-v8a-release-unsigned-signed.apk app-arm64-v8a-release-signed.apk && mv app-armeabi-v7a-release-unsigned-signed.apk app-armeabi-v7a-release-signed.apk && mv app-x86-release-unsigned-signed.apk app-x86-release-signed.apk && mv app-x86_64-release-unsigned-signed.apk app-x86_64-release-signed.apk

      - name: Upload apk artifacts
        uses: actions/upload-artifact@v3
        with:
          path: app/build/outputs/apk/release/app-*-release-signed.apk

      - name: Create tag
        id: create_tag
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.TAG_CREATION_TOKEN }}
          release_branches: ${{ github.ref_name }}
          custom_tag: ${{ github.ref_name }}

  create-release:
    runs-on: ubuntu-latest
    if: "contains(toJSON(github.ref_type), 'tag')"
    steps:
      - name: Get apk artifacts
        uses: actions/download-artifact@v3

      - name: List artifacts after download
        run: find /home/runner/ -name '*.apk*'

      - name: Create changelog
        run: |
          echo "# Automated release ${{ github.ref_name }} equivalent to fenix $(git describe --tags HEAD)" >>temp_changelog.md

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Version ${{ github.ref_name }}"
          draft: false
          prerelease: false
          body_path: temp_changelog.md

      - name: Upload arm64 apk
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app-arm64-v8a-release-signed.apk
          asset_name: browser-arm64-v8a-release-${{ github.ref_name }}-signed.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload armeabi apk
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app-armeabi-v7a-release-signed.apk
          asset_name: browser-armeabi-v7a-release-${{ github.ref_name }}-signed.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload x86 apk
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app-x86-release-signed.apk
          asset_name: browser-x86-release-${{ github.ref_name }}-signed.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload x86_64 apk
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app-x86_64-release-signed.apk
          asset_name: browser-x86_64-release-${{ github.ref_name }}-signed.apk
          asset_content_type: application/vnd.android.package-archive
